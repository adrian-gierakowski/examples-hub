import{bq as n}from"./index-D-c5h5Hy.js";import{br as w,bt as y,bs as p,bu as v}from"./index-D-c5h5Hy.js";const i=async(t,a,s)=>await c(t,a,!1,s)===!1?Promise.reject("Invalid endpoint."):t,d=async(t,a,s)=>{try{const e=await Promise.any(t.map(r=>i(r,a,s)));return s==null||s.debug("rpcEndpoint won the race:",e),e}catch(e){return Promise.reject(e)}},c=async(t,a,s,e)=>{if(s)return e==null||e.debug("Skipping test of accessibility for",t),!0;e==null||e.debug("Testing accessibility of",t);try{let r;if(typeof t=="string"?r=a==="rest"?await n.get(`${t}/cosmos/base/tendermint/v1beta1/node_info`):await n.post(t):r=a==="rest"?await n.get(`${t.url}/cosmos/base/tendermint/v1beta1/node_info`,{headers:t.headers}):await n.post(t.url,{headers:t.headers}),r.status==200)return e==null||e.debug("Access successfully."),!0}catch(r){e==null||e.debug(`${r.name}: ${r.message}`)}return e==null||e.debug("Access failed."),!1},m=(t,a,s,e,r)=>typeof e<"u"?e:typeof s<"u"?s:typeof a<"u"?a:typeof t<"u"?t:!1,u=[{name:"icns",contract:"osmo1xk0s8xgktn9x5vwcgtjdxqzadg88fgn33p8u9cnpdxwemvxscvast52cdd",chainName:"osmosis",getQueryMsg:t=>({icns_names:{address:t}}),slip173:"osmo"},{name:"stargaze",contract:"stars1fx74nkqkw2748av8j7ew7r3xt9cgjqduwn8m0ur5lhe49uhlsasszc5fhr",chainName:"stargaze",getQueryMsg:t=>({name:{address:t}}),slip173:"stars"}],o=t=>{const a=u.find(s=>s.chainName===t);if(!a)throw new Error("No such name service registered with chain "+t);return a};export{w as ClientNotExistError,y as ConnectError,p as RejectedError,d as getFastestEndpoint,m as getIsLazy,o as getNameServiceRegistryFromChainName,v as getWalletStatusFromState,c as isValidEndpoint};
